# Run Tests

name: Test "no dev" install

on:
  # Trigger on push or pull request events for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]

  # Allow running the workflow manually from the Actions tab
  workflow_dispatch:

    inputs:
      run_name:
        type: string
        description: 'Name of workflow run as it will appear under Actions tab:'
        required: false
        default: ""

      use_pypi:
        type: boolean
        description: 'Run tests against the published PyPI version of Aviary'
        required: false
        default: false

run-name:  ${{ inputs.run_name }}

jobs:

  test_ubuntu_no_dev_install:
    runs-on: ubuntu-22.04

    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        include:
          # latest versions of openmdao/dymos
          - NAME: latest
            PY: 3

    steps:
      - name: Display run details
        run: |
          echo "============================================================="
          echo "Run #${GITHUB_RUN_NUMBER}"
          echo "Run ID: ${GITHUB_RUN_ID}"
          echo "Testing: ${GITHUB_REPOSITORY}"
          echo "Triggered by: ${GITHUB_EVENT_NAME}"
          echo "Initiated by: ${GITHUB_ACTOR}"
          echo "============================================================="

      - name: Create SSH key
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.PY }}
          channels: conda-forge

      - name: Checkout Aviary
        uses: actions/checkout@v4

      - name: Install Aviary
        shell: bash -l {0}
        run: |
          echo "============================================================="
          echo "Install Aviary"
          echo "============================================================="
          echo ""
          echo "Temporarily install specific versions for now."
          pip install "numpy<2"
          pip install packaging
          if [[  "${{ inputs.use_pypi }}" == "true" ]]; then
            echo "-----------------------------------------------------------"
            echo "Installing from PyPI"
            echo "-----------------------------------------------------------"
            python -m pip install aviary[all]
          else
            pip install .[all]
          fi

      - name: Display conda environment info
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda env export --file environment.yml
          mv environment.yml ${{ inputs.NAME }}_environment.yml

      - name: 'Upload environment artifact'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.NAME }}_environment
          path: ${{ matrix.NAME }}_environment.yml
          retention-days: 5

      - name: Run tests
        shell: bash -l {0}
        run: |
          echo "============================================================="
          echo "Run Tests (from directory other than repo root)"
          echo "============================================================="
          cd $HOME
          testflo aviary -n 1 --show_skipped --timeout=240 --durations=20
